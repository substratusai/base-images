name: container-build-push
run-name: ${{ github.actor }} triggered container-build-push ðŸš€
on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
jobs:
  base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "${{ vars.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: substratusai/${{ github.job }}
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ github.job }}
          platforms: "linux/amd64,linux/arm64"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    outputs:
      tag: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
  model-trainer-huggingface:
    needs: base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "${{ vars.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: substratusai/${{ github.job }}
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ github.job }}
          platforms: "linux/amd64,linux/arm64"
          build-args: |
            BASE_IMAGE=${{ needs.base.outputs.tag }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  model-loader-huggingface:
    needs: base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "${{ vars.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: substratusai/${{ github.job }}
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ github.job }}
          platforms: "linux/amd64,linux/arm64"
          build-args: |
            BASE_IMAGE=${{ needs.base.outputs.tag }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  dataset-squad:
    needs: base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "${{ vars.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: substratusai/${{ github.job }}
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ github.job }}
          platforms: "linux/amd64,linux/arm64"
          build-args: |
            BASE_IMAGE=${{ needs.base.outputs.tag }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  dataset-loader-http:
    needs: base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "${{ vars.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: substratusai/${{ github.job }}
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ github.job }}
          platforms: "linux/amd64,linux/arm64"
          build-args: |
            BASE_IMAGE=${{ needs.base.outputs.tag }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  model-server-basaran:
    needs: base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "${{ vars.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: substratusai/${{ github.job }}
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ github.job }}
          platforms: "linux/amd64,linux/arm64"
          build-args: |
            BASE_IMAGE=${{ needs.base.outputs.tag }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
